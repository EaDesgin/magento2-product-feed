<?php
/**
 * Copyright Â© 2017 EaDesign by Eco Active S.R.L. All rights reserved.
 * See LICENSE for license details.
 */

namespace Eadesigndev\Productfeed\Model\ResourceModel;

use Magento\CatalogUrlRewrite\Model\ProductUrlRewriteGenerator;
use Magento\Framework\Model\ResourceModel\Db\AbstractDb;
use Magento\Framework\Model\ResourceModel\Db\Context;
use Magento\Store\Model\StoreManagerInterface;

/**
 * Class ProductURLLink
 * @package Eadesigndev\Productfeed\Model\ResourceModel
 *
 * Add link to url for products.
 */
class ProductAdditional extends AbstractDb
{

    /**
     * @var StoreManagerInterface
     */
    private $storeManager;

    /**
     * ProductAdditional constructor.
     * @param Context $context
     * @param StoreManagerInterface $storeManager
     * @param null $connectionName
     */
    public function __construct(
        Context $context,
        StoreManagerInterface $storeManager,
        $connectionName = null
    )
    {
        $this->storeManager = $storeManager;
        parent::__construct($context, $connectionName);
    }

    /**
     * @return void
     */
    protected function _construct()
    {
        $this->_init('catalog_product_entity', 'entity_id');
    }

    /**
     * @param $collection
     * @return bool
     *
     * Add product url to the feed
     */
    public function joinToCollection($collection)
    {

        //todo set the proper store id here
        $store = $this->storeManager->getStore(1);

        if (!$store) {
            return false;
        }
        $connection = $this->getConnection();

        /** @var $collection \Magento\Catalog\Model\ResourceModel\Product\Collection */
        $collection->getSelect()
            ->joinInner(
                ['w' => $this->getTable('catalog_product_website')],
                'e.entity_id = w.product_id',
                []
            )->joinLeft(
                ['url_rewrite' => $this->getTable('url_rewrite')],
                'e.entity_id = url_rewrite.entity_id AND url_rewrite.is_autogenerated = 1 AND url_rewrite.metadata IS NULL'
                . $connection->quoteInto(' AND url_rewrite.store_id = ?', $store->getId())
                . $connection->quoteInto(' AND url_rewrite.entity_type = ?', ProductUrlRewriteGenerator::ENTITY_TYPE),
                ['url' => 'request_path']
            )->where(
                'w.website_id = ?',
                $store->getWebsiteId()
            );

        return $collection;

    }


}